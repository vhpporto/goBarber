{"ast":null,"code":"var _jsxFileName = \"/Users/vitorporto/Desktop/goBarber/frontend/src/routes/Route.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthLayout from \"../\";\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = false;\n\n  if (!signed && isPrivate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (signed && !isPrivate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    component: Component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }));\n}\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["/Users/vitorporto/Desktop/goBarber/frontend/src/routes/Route.js"],"names":["React","PropTypes","Route","Redirect","AuthLayout","RouteWrapper","component","Component","isPrivate","rest","signed","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAOC,UAAP,MAAuB,KAAvB;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,SAAS,EAAEC,SADwB;AAEnCC,EAAAA,SAFmC;AAGnC,KAAGC;AAHgC,CAAtB,EAIZ;AACD,QAAMC,MAAM,GAAG,KAAf;;AAEA,MAAI,CAACA,MAAD,IAAWF,SAAf,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIE,MAAM,IAAI,CAACF,SAAf,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBAAO,oBAAC,KAAD,oBAAWC,IAAX;AAAiB,IAAA,SAAS,EAAEF,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;AAEDF,YAAY,CAACM,SAAb,GAAyB;AACvBH,EAAAA,SAAS,EAAEP,SAAS,CAACW,IADE;AAEvBN,EAAAA,SAAS,EAAEL,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACa,OAAX,EAAoBb,SAAS,CAACc,IAA9B,CAApB,EACRC;AAHoB,CAAzB;AAMAX,YAAY,CAACY,YAAb,GAA4B;AAC1BT,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport AuthLayout from \"../\";\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = false;\n\n  if (!signed && isPrivate) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (signed && !isPrivate) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return <Route {...rest} component={Component} />;\n}\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n};\n"]},"metadata":{},"sourceType":"module"}